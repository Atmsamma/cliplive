version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cliplive-postgres
    environment:
      POSTGRES_DB: cliplive
      POSTGRES_USER: cliplive
      POSTGRES_PASSWORD: cliplive_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - cliplive-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cliplive -d cliplive"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for session storage (optional, can use in-memory for development)
  redis:
    image: redis:7-alpine
    container_name: cliplive-redis
    ports:
      - "6379:6379"
    networks:
      - cliplive-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Main Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cliplive-app
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://cliplive:cliplive_password@postgres:5432/cliplive
      - REDIS_URL=redis://redis:6379
      - SESSION_SECRET=your-super-secret-session-key-change-this-in-production
      - PORT=5000
    ports:
      - "5000:5000"
    volumes:
      - ./clips:/app/clips
      - ./temp:/app/temp
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - cliplive-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:

networks:
  cliplive-network:
    driver: bridge
